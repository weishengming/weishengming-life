<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weishengming.lifeservice.dao.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.weishengming.lifeservice.dao.entities.Article">
    <id column="RecordId" jdbcType="BIGINT" property="recordId" />
    <result column="ArticleId" jdbcType="VARCHAR" property="articleId" />
    <result column="UserId" jdbcType="VARCHAR" property="userId" />
    <result column="Title" jdbcType="VARCHAR" property="title" />
    <result column="Content" jdbcType="VARCHAR" property="content" />
    <result column="Status" jdbcType="INTEGER" property="status" />
    <result column="CreateTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="LastModifyTime" jdbcType="TIMESTAMP" property="lastModifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  <choose>
                    <when test="criterion.isBinary">
                      and ${criterion.condition} unhex(#{criterion.value})
                    </when>
                    <otherwise>
                      and ${criterion.condition} #{criterion.value}
                    </otherwise>
                  </choose>
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    <choose>
                      <when test="criterion.isBinary">
                        unhex(#{listItem})
                      </when>
                      <otherwise>
                        #{listItem}
                      </otherwise>
                    </choose>
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  <choose>
                    <when test="criterion.isBinary">
                      and ${criterion.condition} unhex(#{criterion.value})
                    </when>
                    <otherwise>
                      and ${criterion.condition} #{criterion.value}
                    </otherwise>
                  </choose>
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    <choose>
                      <when test="criterion.isBinary">
                        unhex(#{listItem})
                      </when>
                      <otherwise>
                        #{listItem}
                      </otherwise>
                    </choose>
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    RecordId, ArticleId, UserId, Title, Content, Status, CreateTime, LastModifyTime
  </sql>
  <select id="selectByExample" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_article
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.size != null">
      limit
      <if test="example.offset != null">
        #{example.offset},
      </if>
      #{example.size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_article
    where RecordId = #{recordId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from t_article
    where RecordId = #{recordId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="map">
    delete from t_article
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="map">
    <selectKey keyProperty="record.recordId" order="AFTER" resultType="java.lang.Long">
      <choose>
        <when test="record.recordId != null">
          SELECT #{record.recordId,jdbcType=BIGINT}
        </when>
        <otherwise>
          SELECT LAST_INSERT_ID()
        </otherwise>
      </choose>
    </selectKey>
    insert into t_article (ArticleId, UserId, 
      Title, Content, Status, 
      CreateTime, LastModifyTime
      )
    values (#{record.articleId,jdbcType=VARCHAR}, #{record.userId,jdbcType=VARCHAR}, 
      #{record.title,jdbcType=VARCHAR}, #{record.content,jdbcType=VARCHAR}, #{record.status,jdbcType=INTEGER}, 
      #{record.createTime,jdbcType=TIMESTAMP}, #{record.lastModifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.recordId" order="AFTER" resultType="java.lang.Long">
      <choose>
        <when test="record.recordId != null">
          SELECT #{record.recordId,jdbcType=BIGINT}
        </when>
        <otherwise>
          SELECT LAST_INSERT_ID()
        </otherwise>
      </choose>
    </selectKey>
    insert into t_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.articleId != null">
        ArticleId,
      </if>
      <if test="record.userId != null">
        UserId,
      </if>
      <if test="record.title != null">
        Title,
      </if>
      <if test="record.content != null">
        Content,
      </if>
      <if test="record.status != null">
        Status,
      </if>
      <if test="record.createTime != null">
        CreateTime,
      </if>
      <if test="record.lastModifyTime != null">
        LastModifyTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="record.articleId != null">
        #{record.articleId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null">
        #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="map" resultType="java.lang.Integer">
    select count(*) from t_article
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_article
    <set>
      <if test="record.recordId != null">
        RecordId = #{record.recordId,jdbcType=BIGINT},
      </if>
      <if test="record.articleId != null">
        ArticleId = #{record.articleId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        UserId = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        Title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        Content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        Status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null">
        LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_article
    set RecordId = #{record.recordId,jdbcType=BIGINT},
      ArticleId = #{record.articleId,jdbcType=VARCHAR},
      UserId = #{record.userId,jdbcType=VARCHAR},
      Title = #{record.title,jdbcType=VARCHAR},
      Content = #{record.content,jdbcType=VARCHAR},
      Status = #{record.status,jdbcType=INTEGER},
      CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update t_article
    <set>
      <if test="record.articleId != null">
        ArticleId = #{record.articleId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        UserId = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        Title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        Content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        Status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null">
        LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where RecordId = #{record.recordId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="map">
    update t_article
    set ArticleId = #{record.articleId,jdbcType=VARCHAR},
      UserId = #{record.userId,jdbcType=VARCHAR},
      Title = #{record.title,jdbcType=VARCHAR},
      Content = #{record.content,jdbcType=VARCHAR},
      Status = #{record.status,jdbcType=INTEGER},
      CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP}
    where RecordId = #{record.recordId,jdbcType=BIGINT}
  </update>
</mapper>